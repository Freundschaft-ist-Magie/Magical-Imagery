@page "/Account/Manage/Disable2fa"

@using Microsoft.AspNetCore.Identity


@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<Disable2fa> Logger

<PageTitle>Zwei-Faktor-Authentifizierung (2FA) deaktivieren</PageTitle>

<StatusMessage />
<h3>Zwei-Faktor-Authentifizierung (2FA) deaktivieren</h3>

<div class="alert alert-warning" role="alert">
  <p>
    <strong>Diese Aktion deaktiviert nur die 2FA.</strong>
  </p>
  <p>
    Das Deaktivieren der 2FA ändert nicht die in Authenticator-Apps verwendeten Schlüssel. Wenn Sie den Schlüssel
    in einer Authenticator-App ändern möchten, sollten Sie <a href="Account/Manage/ResetAuthenticator">Ihre Authenticator-Schlüssel zurücksetzen.</a>
  </p>
</div>

<div>
  <form @formname="2fa-deaktivieren" @onsubmit="OnSubmitAsync" method="post">
    <AntiforgeryToken />
    <button class="btn btn-danger" type="submit">2FA deaktivieren</button>
  </form>
</div>

@code {
  private ApplicationUser user = default!;

  [CascadingParameter]
  private HttpContext HttpContext { get; set; } = default!;

  protected override async Task OnInitializedAsync() {
    user = await UserAccessor.GetRequiredUserAsync(HttpContext);

    if (HttpMethods.IsGet(HttpContext.Request.Method) && !await UserManager.GetTwoFactorEnabledAsync(user)) {
      throw new InvalidOperationException("Cannot disable 2FA for user as it's not currently enabled.");
    }
  }

  private async Task OnSubmitAsync() {
    var disable2faResult = await UserManager.SetTwoFactorEnabledAsync(user, false);
    if (!disable2faResult.Succeeded) {
      throw new InvalidOperationException("Unexpected error occurred disabling 2FA.");
    }

    var userId = await UserManager.GetUserIdAsync(user);
    Logger.LogInformation("User with ID '{UserId}' has disabled 2fa.", userId);
    RedirectManager.RedirectToWithStatus(
        "Account/Manage/TwoFactorAuthentication",
        "2fa has been disabled. You can reenable 2fa when you setup an authenticator app",
        HttpContext);
  }
}
