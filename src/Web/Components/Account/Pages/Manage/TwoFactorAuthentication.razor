@page "/Account/Manage/TwoFactorAuthentication"

@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Identity


@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Zwei-Faktor-Authentifizierung (2FA)</PageTitle>

<StatusMessage />
<h3>Zwei-Faktor-Authentifizierung (2FA)</h3>

@if (canTrack) {
  if (is2faEnabled) {
    if (recoveryCodesLeft == 0) {
      <div class="alert alert-danger">
        <strong>Sie haben keine Wiederherstellungscodes mehr übrig.</strong>
        <p>Sie müssen <a href="Account/Manage/GenerateRecoveryCodes">ein neues Set von Wiederherstellungscodes generieren</a>, bevor Sie sich mit einem Wiederherstellungscode anmelden können.</p>
      </div>
    } else if (recoveryCodesLeft == 1) {
      <div class="alert alert-danger">
        <strong>Sie haben noch 1 Wiederherstellungscode übrig.</strong>
        <p>Sie können <a href="Account/Manage/GenerateRecoveryCodes">ein neues Set von Wiederherstellungscodes generieren</a>.</p>
      </div>
    } else if (recoveryCodesLeft <= 3) {
      <div class="alert alert-warning">
        <strong>Sie haben noch @recoveryCodesLeft Wiederherstellungscodes übrig.</strong>
        <p>Sie sollten <a href="Account/Manage/GenerateRecoveryCodes">ein neues Set von Wiederherstellungscodes generieren</a>.</p>
      </div>
    }

    if (isMachineRemembered) {
      <form style="display: inline-block" @formname="forget-browser" @onsubmit="OnSubmitForgetBrowserAsync" method="post">
        <AntiforgeryToken />
        <button type="submit" class="btn btn-primary">Diesen Browser vergessen</button>
      </form>
    }

    <a href="Account/Manage/Disable2fa" class="btn btn-primary">2FA deaktivieren</a>
    <a href="Account/Manage/GenerateRecoveryCodes" class="btn btn-primary">Wiederherstellungscodes zurücksetzen</a>
  }

  <h4>Authenticator-App</h4>
  @if (!hasAuthenticator) {
    <a href="Account/Manage/EnableAuthenticator" class="btn btn-primary">Authenticator-App hinzufügen</a>
  } else {
    <a href="Account/Manage/EnableAuthenticator" class="btn btn-primary">Authenticator-App einrichten</a>
    <a href="Account/Manage/ResetAuthenticator" class="btn btn-primary">Authenticator-App zurücksetzen</a>
  }
} else {
  <div class="alert alert-danger">
    <strong>Datenschutz- und Cookie-Richtlinie wurden nicht akzeptiert.</strong>
    <p>Sie müssen die Richtlinie akzeptieren, bevor Sie die Zwei-Faktor-Authentifizierung aktivieren können.</p>
  </div>
}

@code {
  private bool canTrack;
  private bool hasAuthenticator;
  private int recoveryCodesLeft;
  private bool is2faEnabled;
  private bool isMachineRemembered;

  [CascadingParameter]
  private HttpContext HttpContext { get; set; } = default!;

  protected override async Task OnInitializedAsync() {
    var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
    canTrack = HttpContext.Features.Get<ITrackingConsentFeature>()?.CanTrack ?? true;
    hasAuthenticator = await UserManager.GetAuthenticatorKeyAsync(user) is not null;
    is2faEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
    isMachineRemembered = await SignInManager.IsTwoFactorClientRememberedAsync(user);
    recoveryCodesLeft = await UserManager.CountRecoveryCodesAsync(user);
  }

  private async Task OnSubmitForgetBrowserAsync() {
    await SignInManager.ForgetTwoFactorClientAsync();

    RedirectManager.RedirectToCurrentPageWithStatus(
        "The current browser has been forgotten. When you login again from this browser you will be prompted for your 2fa code.",
        HttpContext);
  }
}
