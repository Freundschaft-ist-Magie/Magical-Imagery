@page "/checkout"
@using Web.Services
@using Web.Components.Components.Checkout
@inject ShoppingCartService ShoppingCartService
@inject NavigationManager Navigation

@if (pageLoaded)
{
  <HeroBanner MainTitle="Warenkorb"
              SubTitle="Produkte, die nach einem Portemonnaie rufen..."
              Image="./assets/cart.svg"
              />

	<div class="container mt-5">
		<h1 class="mb-4">Warenkorb</h1>

		<div class="my-5">
			<NavLink href="/products" class="continue-shopping">

				<span style="margin-bottom: .33rem;">
					<svg width="40" height="21" xmlns="http://www.w3.org/2000/svg" viewBox="-0.5 -0.5 61 21">
						<g>
							<path d="M 50 10 L 25.71 10" fill="none" stroke="rgb(0, 0, 0)" stroke-width="6"
								  stroke-miterlimit="10" pointer-events="stroke" />
							<path d="M 16.71 10 L 28.71 4 L 25.71 10 L 28.71 16 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)"
								  stroke-width="6" stroke-miterlimit="10" pointer-events="all" />
						</g>
					</svg>
				</span>

				Weiter stöbern
			</NavLink>
		</div>

		@foreach (var item in products)
		{
			<ProductCard Product="item" />
		}

    @if(products.Count != 0)
    {
		    <div class="divider-strong" style="margin: 2rem 0;"></div>

        <div class="apply-discount input-group">
          <input @bind-value="discountCode" class="form-control" type="text" placeholder="Rabatt-Code" disabled="@(discount != 0)" />
          <button @onclick=submitDiscountCode class="btn btn-primary" disabled="@(discount != 0)">Anwenden</button>
		    </div>

		    <div style="margin: 1rem 0;">
			    <div class="subtotal">
            <p>Zwischensumme: @DisplayPriceAsCurrency(total)</p>
			    </div>

			    <div class="discount text-muted">
            <p>Rabatt: @DisplayPriceAsCurrency(discount)</p>
			    </div>
		    </div>

		    <div class="divider-strong"></div>

		    <div class="total">
			    <p>Gesamt: @CalulateDiscount() CHF</p>
		    </div>

      <button @onclick=NavigateToPay class="btn btn-success px-5 py-2" style="display: flex; margin-left: auto;">Bezahlen</button>
    } else {
      <p>Der Warenkorb ist leer.</p>
    }
  </div>
}
else
{
	<LoadingSkeleton />
}


@code {
  bool pageLoaded = false;
  private List<Product> products;
  private decimal total;
  private byte discount = 0;
  private string discountCode = "";

  protected override async Task OnInitializedAsync()
  {
    await base.OnInitializedAsync();
    products = ShoppingCartService.Products;
    total = ShoppingCartService.Total;

    pageLoaded = true;
  }

  private void NavigateToPay()
  {
    Navigation.NavigateTo("/pay");
  }

  private decimal CalulateDiscount()
  {
    var result = total - discount;
    return result < 0 ? 0 : result;
  }

  /// <summary>
  /// Displays the price as currency. Only supportes CHF.
  /// </summary>
  /// <param name="price"> The price to display. </param>
  /// <returns> currency string </returns>
  private string DisplayPriceAsCurrency(decimal price) {
    return String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:C}", price);
  }

  /// <summary>
  /// Submits the discount code and sets the discount if the code is valid.
  /// </summary>
  private void submitDiscountCode()
  {
    if (discountCode == "M306") discount = 10;
  }
}
