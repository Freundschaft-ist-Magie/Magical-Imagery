@page "/licences/{id:int?}"
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@using Data.Models
@using Microsoft.EntityFrameworkCore

@if (IsLoading) {
  <LoadingSkeleton />
} else {
  <HeroBanner MainTitle="Lizenzinformationen"
              SubTitle="Erfahre mehr über die verschiedenen Lizenzen..."
              Image="./assets/licence.svg"
              />

  <div class="container mt-3">
    <ul class="nav nav-tabs">
      @foreach (var licence in LicencesList) {
        <li class="nav-item" role="presentation">
          <button class="nav-link custom-nav-link @(SelectedLicence == licence ? "active" : "")" type="button" @onclick="() => SelectLicence(licence)">@licence.Name</button>
        </li>
      }
    </ul>

    <div class="tab-content">
      <div class="tab-pane fade show active">
        <h2 class="mt-4">@SelectedLicence.Name</h2>

        <div class="section-divider"></div>

        <h3 class="section-heading">Kurzbeschreibung</h3>
        <p>@SelectedLicence.ShortDescription</p>

        <h3 class="section-heading">Ausführliche Beschreibung</h3>
        <p>@SelectedLicence.Description</p>
      </div>
    </div>
  </div>

}

@code {
  [Parameter]
  public int? Id { get; set; }

  public List<Licence> LicencesList { get; set; }
  private Licence? SelectedLicence { get; set; }

  private bool IsLoading { get; set; } = true;

  protected override async Task OnInitializedAsync() {
    await base.OnInitializedAsync();

    using var context = await DbFactory.CreateDbContextAsync();

    var licences = await context.Licences.ToListAsync();

    LicencesList = licences;

    if (Id != null)
      SelectedLicence = LicencesList.FirstOrDefault(l => l.Id == Id);
    else
      SelectedLicence = LicencesList.First();

    IsLoading = false;
  }

  /// <summary>
  /// Selects the given licence
  /// </summary>
  /// <param name="licence">licence to select</param>
  private void SelectLicence(Licence licence) {
    SelectedLicence = licence;
  }
}
