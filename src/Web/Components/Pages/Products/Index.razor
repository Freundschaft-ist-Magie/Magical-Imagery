@page "/products"
@using Data.Models
@using Microsoft.EntityFrameworkCore
@inject NavigationManager Navigation
@inject IDbContextFactory<ApplicationDbContext> DbFactory

<PageTitle>Magical Imagery</PageTitle>

@if (isLoading) {
  <LoadingSkeleton />
} else {
  <HeroBanner MainTitle="Kunst wie von Zauberhand"
              SubTitle="Entdecke neue Kunstwerke..."
              Image="./assets/logo.svg"
              />

  <div class="container my-5 p-0">
    <div class="col-12">
      <div class="row">
        @foreach (var product in products) {
          <div class="col-12 col-md-6 col-lg-4">
            <div @onclick="() => NavigateToDetails(product.Id)" class="product">

              <img src="@product.Image" alt="Product Image von @product.Name" />

              <h3 class="my-2">
                @product.Name
              </h3>
              <p class="price">
                @String.Format(new System.Globalization.CultureInfo("de-CH"), "{0:C}", product.Price)
              </p>

              <div class="details">
                <span class="comments">
                  <span class="mx-1">
                    @(product.Comments?.Count ?? 0)
                  </span>
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M21,15a2,2,0,0,1-2,2H7l-4,4V5A2,2,0,0,1,5,3H19a2,2,0,0,1,2,2Z" fill="#000000" />
                  </svg>
                </span>

                <span class="likes">
                  <span class="mx-1">
                    @product.Likes
                  </span>
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" fill="#000000" />
                  </svg>
                </span>
              </div>
            </div>
          </div>
        }
      </div>
    </div>
  </div>
}

@code {
  bool allowVirtualization;

  int count = 0;
  bool isLoading = true;

  IEnumerable<Product> products;

  protected override async Task OnInitializedAsync() {
    await base.OnInitializedAsync();

    isLoading = true;
    using var context = DbFactory.CreateDbContext();

    products = await context.Products.Include(p => p.Comments).ToListAsync();

    // Update the count
    count = products.Count();
    isLoading = false;
  }

  public void NavigateToDetails(int id) {
    Navigation.NavigateTo($"/products/details/{id}");
  }
}